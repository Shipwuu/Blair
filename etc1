--[[
    GHOST ESP SCRIPT WITH SPAWN MARKER BILLBOARD AND TRACKING BILLBOARDS
]]

local textColorHunting = Color3.fromRGB(255, 0, 0) -- Red color for "Hunting" text
local textColorNone = Color3.fromRGB(255, 255, 255) -- White color for "None" text with slight transparency
local spawnCount = 1 -- Counter for ghost spawn billboards
local ghostSpawnBillboard = nil -- Reference to the spawn billboard
local spawnPosition = nil -- Variable to store the initial spawn position

-- Function to create the permanent news screen GUI
local function createNewsScreen()
    local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local newsScreen = Instance.new("ScreenGui")
    newsScreen.Name = "GhostNewsScreen"
    newsScreen.Parent = playerGui
    newsScreen.ResetOnSpawn = false

    local displayFrame = Instance.new("Frame")
    displayFrame.Name = "GhostDisplayFrame"
    displayFrame.Size = UDim2.new(0, 200, 0, 50)  -- Width of 200 pixels, height of 50 pixels
    displayFrame.Position = UDim2.new(0, 10, 1, -60)  -- Positioned at the bottom-left corner
    displayFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Black color for background
    displayFrame.BackgroundTransparency = 0.5  -- Semi-transparent background
    displayFrame.BorderSizePixel = 0  -- No border
    displayFrame.Parent = newsScreen

    local ghostLabel = Instance.new("TextLabel")
    ghostLabel.Name = "GhostLabel"
    ghostLabel.Size = UDim2.new(1, 0, 1, 0)
    ghostLabel.BackgroundTransparency = 1
    ghostLabel.Font = Enum.Font.SourceSansBold -- Bold font for visibility
    ghostLabel.TextSize = 24 -- Increased text size for readability
    ghostLabel.Text = "Ghost: None" -- Default text
    ghostLabel.TextColor3 = textColorNone
    ghostLabel.TextTransparency = 0.3  -- Slight transparency for "None" text
    ghostLabel.TextStrokeTransparency = 0
    ghostLabel.TextXAlignment = Enum.TextXAlignment.Left
    ghostLabel.TextYAlignment = Enum.TextYAlignment.Center
    ghostLabel.Parent = displayFrame

    return ghostLabel
end

-- Function to create or update a BillboardGui for the spawn marker
local function updateSpawnBillboard(part, text)
    -- Remove the old spawn billboard if it exists
    if ghostSpawnBillboard then
        ghostSpawnBillboard:Destroy()
    end

    -- Create BillboardGui for spawn marker
    ghostSpawnBillboard = Instance.new("BillboardGui")
    ghostSpawnBillboard.Name = "GhostSpawnBillboard"
    ghostSpawnBillboard.Adornee = part
    ghostSpawnBillboard.Size = UDim2.new(0, 200, 0, 50)
    ghostSpawnBillboard.StudsOffset = Vector3.new(0, 5, 0)
    ghostSpawnBillboard.AlwaysOnTop = true
    ghostSpawnBillboard.Parent = part

    -- Create TextLabel inside BillboardGui
    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = ghostSpawnBillboard
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.Font = Enum.Font.SourceSansBold -- Bold font for visibility
    textLabel.TextSize = 24 -- Increased text size for readability
    textLabel.TextColor3 = Color3.fromRGB(255, 0, 0) -- Red color for spawn marker
    textLabel.TextStrokeTransparency = 0
    textLabel.TextYAlignment = Enum.TextYAlignment.Center
    textLabel.Text = text
    textLabel.ZIndex = 10
end

-- Function to continuously check for the Ghost's presence and handle billboards
local function trackGhost()
    local ghostLabel = createNewsScreen() -- Create and reference ghostLabel here

    while true do
        local ghost = workspace:FindFirstChild("Ghost")
        
        if ghost then
            -- Update spawn billboard if the ghost has moved to a new location
            if not spawnPosition or (spawnPosition and spawnPosition ~= ghost.Position) then
                spawnPosition = ghost.Position
                spawnCount = spawnCount + 1
                updateSpawnBillboard(ghost, "Spawn Position " .. spawnCount)
            end

            -- Create or update the BillboardGui for tracking the ghost
            local existingTrackingBillboard = ghost:FindFirstChild("GhostTrackingBillboard")
            if not existingTrackingBillboard then
                local trackingBillboard = Instance.new("BillboardGui")
                trackingBillboard.Name = "GhostTrackingBillboard"
                trackingBillboard.Adornee = ghost
                trackingBillboard.Size = UDim2.new(0, 150, 0, 50)
                trackingBillboard.StudsOffset = Vector3.new(0, 5, 0)
                trackingBillboard.AlwaysOnTop = true
                trackingBillboard.Parent = ghost

                local textLabel = Instance.new("TextLabel")
                textLabel.Parent = trackingBillboard
                textLabel.BackgroundTransparency = 1
                textLabel.Size = UDim2.new(1, 0, 1, 0)
                textLabel.Font = Enum.Font.SourceSansBold
                textLabel.TextSize = 24
                textLabel.TextColor3 = Color3.fromRGB(255, 255, 0) -- Yellow color for tracking
                textLabel.TextStrokeTransparency = 0
                textLabel.TextYAlignment = Enum.TextYAlignment.Center
                textLabel.Text = "Ghost Tracking"
                textLabel.ZIndex = 10
            end

            if not isTracking then
                print("Ghost detected. Starting ESP.")
                isTracking = true
                ghostLabel.Text = "Ghost: Hunting"
                ghostLabel.TextColor3 = textColorHunting  -- Red color when ghost is detected
                ghostLabel.TextTransparency = 0  -- No transparency for "Hunting" text
            end
        else
            if isTracking then
                print("Ghost disappeared. Stopping ESP.")
                isTracking = false
                ghostLabel.Text = "Ghost: None"
                ghostLabel.TextColor3 = textColorNone  -- White color when no ghost is detected
                ghostLabel.TextTransparency = 0.3  -- Slight transparency for "None" text
            end
        end

        wait(1) -- Check every second
    end
end

-- Start the ghost tracking function
spawn(trackGhost)

print("Ghost ESP with permanent spawn billboard and tracking billboards script is running")
--[[
    END GHOST ESP SCRIPT WITH SPAWN MARKER BILLBOARD AND TRACKING BILLBOARDS
]]
