-- Check if the ScreenGui already exists
local existingGui = game.Players.LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("BlairScreenGui")
if existingGui then
    existingGui:Destroy() -- Destroy the existing GUI to prevent duplication
end

-- Creating a new ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BlairScreenGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Creating the scrolling frame for Blair GUI
local mainFrame = Instance.new("ScrollingFrame")
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.AnchorPoint = Vector2.new(0, 0.5)
mainFrame.Position = UDim2.new(0, 0, 0.5, 0)
mainFrame.Size = UDim2.new(0.25, 0, 0.25, 0) -- 1/4 of the screen
mainFrame.CanvasSize = UDim2.new(0, 0, 1.5, 0) -- Adjust this for scrolling
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false -- Start hidden until toggle is pressed
mainFrame.ScrollBarThickness = 8

-- Adding a title to Blair GUI
local titleLabel = Instance.new("TextLabel")
titleLabel.Parent = mainFrame
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.Size = UDim2.new(1, 0, 0, 50)
titleLabel.BackgroundTransparency = 1
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.Text = "Blair GUI"
titleLabel.TextSize = 24
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)

-- Function to create buttons
local function createButton(name, text, callback)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Parent = mainFrame
    button.Size = UDim2.new(0.8, 0, 0, 40) -- Reduced button size
    button.Position = UDim2.new(0.1, 0, 0, 60 + (#mainFrame:GetChildren() - 2) * 50)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.BorderSizePixel = 0
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSans
    button.TextSize = 16 -- Reduced text size
    button.Text = text
    button.MouseButton1Click:Connect(callback)
end

-- Toggle button to show/hide Blair GUI
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleBlairGUIButton"
toggleButton.Parent = screenGui
toggleButton.Size = UDim2.new(0, 100, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 128, 255)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18
toggleButton.Text = "Toggle GUI"

toggleButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
end)

-- Creating the Sanity Check Frame
local sanityFrame = Instance.new("Frame")
sanityFrame.Name = "SanityFrame"
sanityFrame.Parent = screenGui
sanityFrame.AnchorPoint = Vector2.new(0.5, 0)
sanityFrame.Position = UDim2.new(0.5, 0, 0, 10) -- Positioned at the middle top of the screen
sanityFrame.Size = UDim2.new(0, 200, 0, 50)
sanityFrame.BackgroundTransparency = 1 -- Transparent frame
sanityFrame.BorderSizePixel = 0

-- Adding Sanity Text
local sanityLabel = Instance.new("TextLabel")
sanityLabel.Parent = sanityFrame
sanityLabel.Size = UDim2.new(1, 0, 1, 0)
sanityLabel.BackgroundTransparency = 1
sanityLabel.Font = Enum.Font.SourceSansBold
sanityLabel.TextSize = 20
sanityLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
sanityLabel.Text = "Sanity: Loading..."
sanityLabel.TextStrokeTransparency = 0.5

-- Function to update Sanity Text continuously
local player = game:GetService("Players").LocalPlayer
local sanity = player:WaitForChild("Sanity", 5)
if sanity then
    sanity:GetPropertyChangedSignal("Value"):Connect(function()
        sanityLabel.Text = "Sanity: " .. sanity.Value
    end)
else
    sanityLabel.Text = "Sanity: N/A"
end

-- Function to add billboards to objects
local function trackObject(object, text, color)
    if not object:FindFirstChild(text) then
        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = object
        billboard.Name = text
        billboard.Size = UDim2.new(0, 100, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = object

        local textLabel = Instance.new("TextLabel")
        textLabel.Parent = billboard
        textLabel.BackgroundTransparency = 1
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.TextSize = 14
        textLabel.TextColor3 = color
        textLabel.TextStrokeTransparency = 0
        textLabel.TextYAlignment = Enum.TextYAlignment.Center
        textLabel.Text = text
        textLabel.ZIndex = 10
    end
end

-- Function to continuously track objects and ensure billboards remain intact
local function continuousTrack()
    while true do
        local map = workspace:FindFirstChild("Map")
        if map then
            -- Crused Items
            local crusedItems = {
                {name = "Ouija Board", path = game:GetService("Workspace"):FindFirstChild("Ouija Board"), color = Color3.fromRGB(0, 128, 0)},
                {name = "Summoning Circle", path = game:GetService("Workspace"):FindFirstChild("SummoningCircle"), color = Color3.fromRGB(255, 140, 0)},
                {name = "Tarot Cards", path = game:GetService("Workspace").Map.Items:FindFirstChild("Tarot Cards"), color = Color3.fromRGB(128, 0, 128)}
            }

            for _, item in pairs(crusedItems) do
                if item.path then
                    trackObject(item.path, item.name, item.color)
                end
            end

            -- Track Generators
            if map:FindFirstChild("Generators") then
                for _, obj in pairs(map.Generators:GetChildren()) do
                    if obj.Name == "GeneratorMesh" then
                        trackObject(obj, "Generator", Color3.fromRGB(255, 0, 0))
                    end
                end
            end

            -- Track Van
            if map:FindFirstChild("Van") then
                for _, obj in pairs(map.Van:GetChildren()) do
                    if obj.Name == "SpawnLocation" then
                        trackObject(obj, "Van", Color3.fromRGB(255, 20, 147))
                    end
                end
            end

            -- Track Orbs
            if map:FindFirstChild("Orbs") then
                for _, obj in pairs(map.Orbs:GetChildren()) do
                    if obj.Name == "OrbPart" then
                        trackObject(obj, "Orb", Color3.fromRGB(30, 144, 255))
                    end
                end
            end

            -- Track Prints
            if map:FindFirstChild("Prints") then
                for _, obj in pairs(map.Prints:GetChildren()) do
                    if obj.Name == "UV_Hand" then
                        trackObject(obj, "Fingerprint", Color3.fromRGB(75, 0, 130))
                    end
                end
            end
        end

        wait(1) -- Check every 1 second to ensure billboards stay intact
    end
end

-- Run the continuous track function
spawn(continuousTrack)

-- Set up lighting and other environmental effects
game:GetService("Lighting").Brightness = 2
game:GetService("Lighting").ClockTime = 0
game:GetService("Lighting").FogEnd = 100000
game:GetService("Lighting").GlobalShadows = false
game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)

print("Script is running")
