-- Check if the ScreenGui already exists
local existingGui = game.Players.LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("BlairScreenGui")
if existingGui then
    existingGui:Destroy() -- Destroy the existing GUI to prevent duplication
end

-- Creating a new ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BlairScreenGui"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Creating the scrolling frame for Blair GUI
local mainFrame = Instance.new("ScrollingFrame")
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.AnchorPoint = Vector2.new(0, 0.5)
mainFrame.Position = UDim2.new(0, 0, 0.5, 0)
mainFrame.Size = UDim2.new(0.25, 0, 0.25, 0) -- 1/4 of the screen
mainFrame.CanvasSize = UDim2.new(0, 0, 1.5, 0) -- Adjust this for scrolling
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false -- Start hidden until toggle is pressed
mainFrame.ScrollBarThickness = 8

-- Adding a title to Blair GUI
local titleLabel = Instance.new("TextLabel")
titleLabel.Parent = mainFrame
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.Size = UDim2.new(1, 0, 0, 50)
titleLabel.BackgroundTransparency = 1
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.Text = "Blair GUI"
titleLabel.TextSize = 24
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)

-- Function to create buttons
local function createButton(name, text, callback)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Parent = mainFrame
    button.Size = UDim2.new(0.8, 0, 0, 40) -- Reduced button size
    button.Position = UDim2.new(0.1, 0, 0, 60 + (#mainFrame:GetChildren() - 2) * 50)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.BorderSizePixel = 0
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSans
    button.TextSize = 16 -- Reduced text size
    button.Text = text
    button.MouseButton1Click:Connect(callback)
end

-- Toggle button to show/hide Blair GUI
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleBlairGUIButton"
toggleButton.Parent = screenGui
toggleButton.Size = UDim2.new(0, 100, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 128, 255)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18
toggleButton.Text = "Toggle GUI"

toggleButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
end)

-- Creating the Sanity Check Frame
local sanityFrame = Instance.new("Frame")
sanityFrame.Name = "SanityFrame"
sanityFrame.Parent = screenGui
sanityFrame.AnchorPoint = Vector2.new(0.5, 0)
sanityFrame.Position = UDim2.new(0.5, 0, 0, 10) -- Positioned at the middle top of the screen
sanityFrame.Size = UDim2.new(0, 200, 0, 50)
sanityFrame.BackgroundTransparency = 1 -- Transparent frame
sanityFrame.BorderSizePixel = 0

-- Adding Sanity Text
local sanityLabel = Instance.new("TextLabel")
sanityLabel.Parent = sanityFrame
sanityLabel.Size = UDim2.new(1, 0, 1, 0)
sanityLabel.BackgroundTransparency = 1
sanityLabel.Font = Enum.Font.SourceSansBold
sanityLabel.TextSize = 20
sanityLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
sanityLabel.Text = "Sanity: Loading..."
sanityLabel.TextStrokeTransparency = 0.5

-- Function to update Sanity Text continuously
local player = game:GetService("Players").LocalPlayer
local sanity = player:WaitForChild("Sanity", 5)
if sanity then
    sanity:GetPropertyChangedSignal("Value"):Connect(function()
        sanityLabel.Text = "Sanity: " .. sanity.Value
    end)
else
    sanityLabel.Text = "Sanity: N/A"
end

-- Check for Crused Items before proceeding
local function checkCrusedItems()
    local crusedItems = {}
    local crusedItemObjects = {}

    local ouijaBoard = game:GetService("Workspace"):FindFirstChild("Ouija Board")
    if ouijaBoard then
        table.insert(crusedItems, "Ouija Board")
        crusedItemObjects["Ouija Board"] = ouijaBoard
    end

    local summoningCircle = game:GetService("Workspace"):FindFirstChild("SummoningCircle")
    if summoningCircle then
        table.insert(crusedItems, "Summoning Circle")
        crusedItemObjects["Summoning Circle"] = summoningCircle
    end

    local tarotCards = game:GetService("Workspace").Map.Items:FindFirstChild("Tarot Cards")
    if tarotCards then
        local tarotCardHandle = tarotCards:FindFirstChild("Handle")
        if tarotCardHandle then
            table.insert(crusedItems, "Tarot Cards")
            crusedItemObjects["Tarot Cards"] = tarotCardHandle
        end
    end

    return crusedItems, crusedItemObjects
end

local crusedItems, crusedItemObjects = checkCrusedItems()

if #crusedItems == 0 then
    game.StarterGui:SetCore("SendNotification", {
        Title = "No Crused Items",
        Text = "No Crused Items found in the game.",
        Duration = 3
    })
else
    game.StarterGui:SetCore("SendNotification", {
        Title = "Crused Items Found",
        Text = "Found: " .. table.concat(crusedItems, ", "),
        Duration = 3
    })

    -- Add billboards and teleport buttons for each found Crused Item
    for itemName, itemObject in pairs(crusedItemObjects) do
        local color = itemName == "Ouija Board" and Color3.fromRGB(0, 128, 0) or (itemName == "Summoning Circle" and Color3.fromRGB(255, 140, 0) or Color3.fromRGB(128, 0, 128))
        -- Add billboards to Crused Items
        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = itemObject
        billboard.Name = itemName
        billboard.Size = UDim2.new(0, 100, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = itemObject

        local textLabel = Instance.new("TextLabel")
        textLabel.Parent = billboard
        textLabel.BackgroundTransparency = 1
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.TextSize = 14
        textLabel.TextColor3 = color
        textLabel.TextStrokeTransparency = 0
        textLabel.TextYAlignment = Enum.TextYAlignment.Center
        textLabel.Text = itemName
        textLabel.ZIndex = 10
        
        createButton("TpTo" .. itemName, "Teleport to " .. itemName, function()
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = itemObject.CFrame
        end)
    end
end

-- Continue with the rest of the script even if no Crused Items are found
-- Set up lighting and other environmental effects
game:GetService("Lighting").Brightness = 2
game:GetService("Lighting").ClockTime = 0
game:GetService("Lighting").FogEnd = 100000
game:GetService("Lighting").GlobalShadows = false
game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)

local map = workspace:FindFirstChild("Map")
if map then
    for _, obj in pairs(map.Generators:GetChildren()) do
        if obj.Name == "GeneratorMesh" then
            -- Add billboards to Generator
            local billboard = Instance.new("BillboardGui")
            billboard.Adornee = obj
            billboard.Name = "Generator"
            billboard.Size = UDim2.new(0, 100, 0, 50)
            billboard.StudsOffset = Vector3.new(0, 2, 0)
            billboard.AlwaysOnTop = true
            billboard.Parent = obj

            local textLabel = Instance.new("TextLabel")
            textLabel.Parent = billboard
            textLabel.BackgroundTransparency = 1
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.Font = Enum.Font.SourceSansBold
            textLabel.TextSize = 14
            textLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            textLabel.TextStrokeTransparency = 0
            textLabel.TextYAlignment = Enum.TextYAlignment.Center
            textLabel.Text = "Generator"
            textLabel.ZIndex = 10
        end
    end

    for _, obj in pairs(map.Van:GetChildren()) do
        if obj.Name == "SpawnLocation" then
            -- Add billboards to Van
            local billboard = Instance.new("BillboardGui")
            billboard.Adornee = obj
            billboard.Name = "Van"
            billboard.Size = UDim2.new(0, 100, 0, 50)
            billboard.StudsOffset = Vector3.new(0, 2, 0)
            billboard.AlwaysOnTop = true
            billboard.Parent = obj

            local textLabel = Instance.new("TextLabel")
            textLabel.Parent = billboard
            textLabel.BackgroundTransparency = 1
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.Font = Enum.Font.SourceSansBold
            textLabel.TextSize = 14
            textLabel.TextColor3 = Color3.fromRGB(255, 20, 147)
            textLabel.TextStrokeTransparency = 0
            textLabel.TextYAlignment = Enum.TextYAlignment.Center
            textLabel.Text = "Van"
            textLabel.ZIndex = 10
        end
    end

    -- Adding teleport buttons for Generator and Van
    createButton("TpToGenerator", "Teleport to Generator", function()
        local generator = map.Generators:FindFirstChild("GeneratorMesh")
        if generator then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = generator.CFrame
        else
            game.StarterGui:SetCore("SendNotification", {
                Title = "Error",
                Text = "Generator not found",
                Duration = 2
            })
        end
    end)

    createButton("TpToVan", "Teleport to Van", function()
        local van = map.Van:FindFirstChild("SpawnLocation")
        if van then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = van.CFrame
        else
            game.StarterGui:SetCore("SendNotification", {
                Title = "Error",
                Text = "Van not found",
                Duration = 2
            })
        end
    end)
else
    warn("Map not found in Workspace.")
end

-- Instant Proximity Prompt Script (runs immediately)
local ProximityPromptService = game:GetService("ProximityPromptService")

if fireproximityprompt then
    execCmd("uninstantproximityprompts")
    wait(0.1)
    ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
        fireproximityprompt(prompt)
    end)
    print("InstantPP ON")
else
    game.StarterGui:SetCore("SendNotification", {
        Title = "Incompatible Exploit",
        Text = "Your exploit does not support this command (missing fireproximityprompt)",
        Duration = 2
    })
end

print("halo")
